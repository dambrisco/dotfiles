" associate Dockerfile with sh filetype syntax
autocmd BufRead,BufNewFile Dockerfile setfiletype sh
autocmd BufRead,BufNewFile Dockerfile.* setfiletype sh
" associate .conf files with upstart filetype syntqx
autocmd BufRead,BufNewFile *.conf set filetype=upstart
" javascript uses 2 spaces everywhere
autocmd Filetype javascript setlocal ts=2 sts=2 sw=2
" call nodejs-man command line program for core docs keyword lookup
autocmd BufReadPost *.js   set keywordprg=nodejs-man

autocmd BufReadPost *.eslintrc,*.tern-project   set syntax=json

autocmd BufEnter *.js set updatetime=10
" do not extend comments when opening a new line
autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o

autocmd FileType go set listchars=tab:  ,trail:·
" autocmd FileType python set colorcolumn=80

function! s:StripWhiteSpaces()
  let save_cursor = getpos(".")
  let old_query = getreg('/')
  :%s/\s\+$//e
  call setpos('.', save_cursor)
  call setreg('/', old_query)
endfunction

autocmd BufWritePre * StripWhiteSpace
command! -range=% StripWhiteSpaces :silent call <SID>StripWhiteSpaces()

function! s:getRoot()
  let cph = expand('%:p:h', 1)
  if !(cph =~ '^.\+://')
    for mkr in ['.git/', '.hg/', '.svn/', '.bzr/', '_darcs/', '.vimprojects']
      let wd = call('find'.(mkr =~ '/$' ? 'dir' : 'file'), [mkr, cph.';'])
      if wd != ''
        break
      endif
    endfor
  endif
  return fnamemodify(fnameescape(wd == '' ? cph : substitute(wd, mkr.'$', '', '')), ':p')
endfunction

autocmd StdinReadPre * let s:std_in=1

function! s:openNerdTree(root, exp, argc, argv)
  if !exists("s:std_in") && a:argc == 1
    let path = a:argv[0]
    exe 'NERDTree'

    if a:root != a:exp
      exe 'NERDTreeFind' path
    endif

    if isdirectory(path)
      only
    else
      wincmd p
    endif
  endif
endfunction

if &loadplugins
  let root = s:getRoot()
  let exp = expand('%:p')
  autocmd VimEnter * call s:openNerdTree(root, exp, argc(), argv())
  "autocmd VimEnter * if !exists("s:std_in") && argc() == 1 | exe 'NERDTree' root | if root != exp | exe 'NERDTreeFind' argv()[0] | endif | if isdirectory(argv()[0]) | only | else | wincmd p | endif | endif
endif
